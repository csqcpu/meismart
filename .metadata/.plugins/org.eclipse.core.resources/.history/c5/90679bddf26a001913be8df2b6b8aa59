package com.lottery.service.auth;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSONObject;
import com.lottery.model.auth.Perm;
import com.lottery.model.auth.PureUser;
import com.lottery.model.sys.SysRolePerm;
import com.lottery.redis.MybatisRedisCache;
import com.lottery.service.sys.SysRolePermService;

@Service
public class Auth {
	final static long LOGIN_EXPIRETIME = 60*60;
	public final static String SELECT_ACTION="SELECT_ACTION";
	public final static String INSERT_ACTION="INSERT_ACTION";
	@Autowired
	MybatisRedisCache mybatisRedisCache;
	@Autowired
	SysRolePermService sysRolePermService;

	public void setUserInfoByToken(String token, PureUser pureUser) {
		String PUREUSER_KEY = token + ":pureuser";
		mybatisRedisCache.putObject(PUREUSER_KEY, pureUser);
		mybatisRedisCache.expire(PUREUSER_KEY, LOGIN_EXPIRETIME);
	}

	public PureUser getUserInfoByToken(String token) {
		String PUREUSER_KEY = token + ":pureuser";
		PureUser pureUser = (PureUser) mybatisRedisCache.getObject(PUREUSER_KEY);
		if (mybatisRedisCache.ttl(PUREUSER_KEY) > 0)
			mybatisRedisCache.expire(PUREUSER_KEY, LOGIN_EXPIRETIME);
		return pureUser;
	}
	
	public PureUser authenticateUser(String token) throws Exception  {
		PureUser pureUser = getUserInfoByToken(token);
		if(pureUser==null){
			throw new Exception("{msg:\"用户未登录\",code:1001}");
		}
		return pureUser;
	}
	
	public String getUserPermission(String token,String Path,String action) throws Exception  {
		PureUser pureUser = getUserInfoByToken(token);
		if(pureUser==null){
			throw new Exception("{msg:\"用户未登录\",code:1001}");
		}
		SysRolePerm sysRolePerm = sysRolePermService.findByRoleId(pureUser.getRole_id(), Path);
		if(sysRolePerm==null){
			throw new Exception("{msg:\"用户无读权限\",code:-1}");
		}
		JSONObject JsonPerm =(JSONObject) JSONObject.parse(sysRolePerm.getPerm());
		Perm perm = JSONObject.toJavaObject(JsonPerm,Perm.class);
		if(action.equals(SELECT_ACTION)){
			if(perm==null || perm.getSelect().isEmpty()){
				throw new Exception("{msg:\"用户无读权限\",code:-1}");
			}else{
				return perm.getSelect();
			}
		}
		if(action.equals(INSERT_ACTION)){
			if(perm==null || perm.getSelect().isEmpty()){
				throw new Exception("{msg:\"用户无添加记录权限\",code:-1}");
			}else{
				return perm.getSelect();
			}
		}
		return null;
	}
}